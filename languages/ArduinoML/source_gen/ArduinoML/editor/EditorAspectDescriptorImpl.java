package ArduinoML.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Collections;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x3389428e8c9944b6L, 0x8b7e9adb09b40a0bL, 0x34af210487785cfdL, "ArduinoML.structure.LCDScreen"))) {
        return Collections.<ConceptEditor>singletonList(new LCDScreen_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x3389428e8c9944b6L, 0x8b7e9adb09b40a0bL, 0xc61abad160dc650L, "ArduinoML.structure.ReadValue"))) {
        return Collections.<ConceptEditor>singletonList(new ReadValue_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x3389428e8c9944b6L, 0x8b7e9adb09b40a0bL, 0x76e4e6606536afe6L, "ArduinoML.structure.Sensor"))) {
        return Collections.<ConceptEditor>singletonList(new Sensor_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x3389428e8c9944b6L, 0x8b7e9adb09b40a0bL, 0x76e4e66065386d30L, "ArduinoML.structure.State"))) {
        return Collections.<ConceptEditor>singletonList(new State_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x3389428e8c9944b6L, 0x8b7e9adb09b40a0bL, 0x3edb87f41598da6aL, "ArduinoML.structure.Transition"))) {
        return Collections.<ConceptEditor>singletonList(new Transition_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x3389428e8c9944b6L, 0x8b7e9adb09b40a0bL, 0x3edb87f415957f0dL, "ArduinoML.structure.WriteValue"))) {
        return Collections.<ConceptEditor>singletonList(new WriteValue_Editor());
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }



}
